"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[99124],{8051:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var i=s(24246),r=s(71670);const o={},t="Interface: PodCreateOptions",c={id:"interfaces/PodCreateOptions",title:"Interface: PodCreateOptions",description:"Properties",source:"@site/api/interfaces/PodCreateOptions.md",sourceDirName:"interfaces",slug:"/interfaces/PodCreateOptions",permalink:"/api/interfaces/PodCreateOptions",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"typedocSidebar",previous:{title:"PodContainerInfo",permalink:"/api/interfaces/PodContainerInfo"},next:{title:"PodCreatePortOptions",permalink:"/api/interfaces/PodCreatePortOptions"}},d={},a=[{value:"Properties",id:"properties",level:2},{value:"Networks?",id:"networks",level:3},{value:"Remarks",id:"remarks",level:4},{value:"Index signature",id:"index-signature",level:4},{value:"Source",id:"source",level:4},{value:"exit_policy?",id:"exit_policy",level:3},{value:"Examples",id:"examples",level:4},{value:"Source",id:"source-1",level:4},{value:"labels?",id:"labels",level:3},{value:"Index signature",id:"index-signature-1",level:4},{value:"Source",id:"source-2",level:4},{value:"name?",id:"name",level:3},{value:"Source",id:"source-3",level:4},{value:"netns?",id:"netns",level:3},{value:"nsmode",id:"nsmode",level:4},{value:"Examples",id:"examples-1",level:5},{value:"Source",id:"source-4",level:4},{value:"portmappings?",id:"portmappings",level:3},{value:"Source",id:"source-5",level:4},{value:"provider?",id:"provider",level:3},{value:"Source",id:"source-6",level:4}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"interface-podcreateoptions",children:"Interface: PodCreateOptions"}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(n.h3,{id:"networks",children:"Networks?"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"optional"})," ",(0,i.jsx)(n.strong,{children:"Networks"}),": ",(0,i.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Map of networks names to ids the container should join to.\nYou can request additional settings for each network, you can set network aliases,"}),"\n",(0,i.jsx)(n.h4,{id:"remarks",children:"Remarks"}),"\n",(0,i.jsxs)(n.p,{children:["PodCreateOptions.netns.nsmode need to be set to ",(0,i.jsx)(n.code,{children:"bridge"})," to join a network"]}),"\n",(0,i.jsx)(n.h4,{id:"index-signature",children:"Index signature"}),"\n",(0,i.jsxs)(n.p,{children:["[",(0,i.jsx)(n.code,{children:"key"}),": ",(0,i.jsx)(n.code,{children:"string"}),"]: ",(0,i.jsx)(n.code,{children:"object"})]}),"\n",(0,i.jsx)(n.h4,{id:"source",children:"Source"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/feloy/podman-desktop/blob/4f9d4c61f96597a3ee835c06b7e93f8b8836efb8/packages/extension-api/src/extension-api.d.ts#L399",children:"packages/extension-api/src/extension-api.d.ts:399"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"exit_policy",children:"exit_policy?"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"optional"})," ",(0,i.jsx)(n.strong,{children:"exit_policy"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"ExitPolicy determines the pod's exit and stop behaviour."}),"\n",(0,i.jsx)(n.h4,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'"continue": the pod continues running. This is the default policy\nwhen creating a pod.\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'"stop": stop the pod when the last container exits. This is the\ndefault behaviour for play kube.\n'})}),"\n",(0,i.jsx)(n.h4,{id:"source-1",children:"Source"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/feloy/podman-desktop/blob/4f9d4c61f96597a3ee835c06b7e93f8b8836efb8/packages/extension-api/src/extension-api.d.ts#L428",children:"packages/extension-api/src/extension-api.d.ts:428"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"labels",children:"labels?"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"optional"})," ",(0,i.jsx)(n.strong,{children:"labels"}),": ",(0,i.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Labels are key-value pairs that are used to add metadata to pods. Optional."}),"\n",(0,i.jsx)(n.h4,{id:"index-signature-1",children:"Index signature"}),"\n",(0,i.jsxs)(n.p,{children:["[",(0,i.jsx)(n.code,{children:"key"}),": ",(0,i.jsx)(n.code,{children:"string"}),"]: ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsx)(n.h4,{id:"source-2",children:"Source"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/feloy/podman-desktop/blob/4f9d4c61f96597a3ee835c06b7e93f8b8836efb8/packages/extension-api/src/extension-api.d.ts#L389",children:"packages/extension-api/src/extension-api.d.ts:389"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"name",children:"name?"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"optional"})," ",(0,i.jsx)(n.strong,{children:"name"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Name is the name of the pod. If not provided, a name will be generated when the pod is created. Optional."}),"\n",(0,i.jsx)(n.h4,{id:"source-3",children:"Source"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/feloy/podman-desktop/blob/4f9d4c61f96597a3ee835c06b7e93f8b8836efb8/packages/extension-api/src/extension-api.d.ts#L379",children:"packages/extension-api/src/extension-api.d.ts:379"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"netns",children:"netns?"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"optional"})," ",(0,i.jsx)(n.strong,{children:"netns"}),": ",(0,i.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Network namespace"}),"\n",(0,i.jsx)(n.h4,{id:"nsmode",children:"nsmode"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"nsmode"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"NamespaceMode"}),"\n",(0,i.jsx)(n.h5,{id:"examples-1",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"`bridge` indicates that the network backend (CNI/netavark) should be used.\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"`pasta` indicates that a pasta network stack should be used.\n"})}),"\n",(0,i.jsx)(n.h4,{id:"source-4",children:"Source"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/feloy/podman-desktop/blob/4f9d4c61f96597a3ee835c06b7e93f8b8836efb8/packages/extension-api/src/extension-api.d.ts#L408",children:"packages/extension-api/src/extension-api.d.ts:408"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"portmappings",children:"portmappings?"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"optional"})," ",(0,i.jsx)(n.strong,{children:"portmappings"}),": ",(0,i.jsx)(n.a,{href:"/api/interfaces/PodCreatePortOptions",children:(0,i.jsx)(n.code,{children:"PodCreatePortOptions"})}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"PortMappings is a set of ports to map into the infra container.\nAs, by default, containers share their network with the infra container, this will forward the ports to the entire pod.\nOnly available if NetNS is set to Bridge, Slirp, or Pasta."}),"\n",(0,i.jsx)(n.h4,{id:"source-5",children:"Source"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/feloy/podman-desktop/blob/4f9d4c61f96597a3ee835c06b7e93f8b8836efb8/packages/extension-api/src/extension-api.d.ts#L385",children:"packages/extension-api/src/extension-api.d.ts:385"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"provider",children:"provider?"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"optional"})," ",(0,i.jsx)(n.strong,{children:"provider"}),": ",(0,i.jsx)(n.a,{href:"/api/interfaces/ContainerProviderConnection",children:(0,i.jsx)(n.code,{children:"ContainerProviderConnection"})})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"source-6",children:"Source"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/feloy/podman-desktop/blob/4f9d4c61f96597a3ee835c06b7e93f8b8836efb8/packages/extension-api/src/extension-api.d.ts#L391",children:"packages/extension-api/src/extension-api.d.ts:391"})})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},71670:(e,n,s)=>{s.d(n,{Z:()=>c,a:()=>t});var i=s(27378);const r={},o=i.createContext(r);function t(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);