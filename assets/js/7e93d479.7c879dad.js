"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[22978],{5959:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>d,toc:()=>m});var s=o(24246),t=o(71670);const i={title:"Commands",description:"Podman Desktop onboarding command reference",tags:["podman-desktop","extension"],keywords:["podman desktop","extension"]},a="Commands",d={id:"extensions/developing/commands",title:"Commands",description:"Podman Desktop onboarding command reference",source:"@site/docs/extensions/developing/commands.md",sourceDirName:"extensions/developing",slug:"/extensions/developing/commands",permalink:"/docs/extensions/developing/commands",draft:!1,unlisted:!1,editUrl:"https://github.com/containers/podman-desktop/tree/main/website/docs/extensions/developing/commands.md",tags:[{inline:!0,label:"podman-desktop",permalink:"/docs/tags/podman-desktop"},{inline:!0,label:"extension",permalink:"/docs/tags/extension"}],version:"current",frontMatter:{title:"Commands",description:"Podman Desktop onboarding command reference",tags:["podman-desktop","extension"],keywords:["podman desktop","extension"]},sidebar:"mySidebar",previous:{title:"Adding icons",permalink:"/docs/extensions/developing/adding-icons"},next:{title:"API Reference",permalink:"/docs/extensions/api/"}},c={},m=[{value:"Configuration details",id:"configuration-details",level:2},{value:"<code>package.json</code> Example",id:"packagejson-example",level:3},{value:"JSON Schema",id:"json-schema",level:3},{value:"Verification",id:"verification",level:3}];function r(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"commands",children:"Commands"}),"\n",(0,s.jsx)(n.h2,{id:"configuration-details",children:"Configuration details"}),"\n",(0,s.jsx)(n.p,{children:"This section describes new commands added to the extension, which enable enhanced interaction and automation within the development environment. These commands can be used programmatically through the API."}),"\n",(0,s.jsxs)(n.h3,{id:"packagejson-example",children:[(0,s.jsx)(n.code,{children:"package.json"})," Example"]}),"\n",(0,s.jsxs)(n.p,{children:["This example shows how new commands are added to ",(0,s.jsx)(n.code,{children:"package.json"}),", enabling them for use within the extension. Each command is defined with a unique identifier and a descriptive title that appears in the command palette."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "contributes": {\n    "commands": [\n      {\n        "command": "extension.exampleCommand",\n        "title": "Extension: Example Command"\n      },\n      {\n        "command": "extension.anotherCommand",\n        "title": "Extension: Another Command"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"And within the TypeScript code, you can use the commands like so:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const exampleCommand = extensionApi.commands.registerCommand('extension.exampleCommand', async () => {\n  // Implementation logic here\n  console.log('Executing Example Command');\n});\n\nconst anotherCommand = extensionApi.commands.registerCommand('extension.anotherCommand', () => {\n  // Synchronous logic can be used if async processing is not required\n  console.log('Another Command Executed');\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"json-schema",children:"JSON Schema"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "contributes": {\n    "commands": [\n      {\n        "command": "string",\n        "title": "string"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"verification",children:"Verification"}),"\n",(0,s.jsx)(n.p,{children:"To verify that your commands are working as expected:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Install the extension in your development environment."}),"\n",(0,s.jsxs)(n.li,{children:["Add a command to ",(0,s.jsx)(n.code,{children:"package.json"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Execute the commands and check for the expected outputs / logging."}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},71670:(e,n,o)=>{o.d(n,{Z:()=>d,a:()=>a});var s=o(27378);const t={},i=s.createContext(t);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);