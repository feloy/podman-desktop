"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3973],{35318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(27378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),d=a,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},39798:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(27378),a=n(38944);const o="tabItem_wHwb";function i(e){let{children:t,hidden:n,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,i),hidden:n},t)}},23930:(e,t,n)=>{n.d(t,{Z:()=>w});var r=n(25773),a=n(27378),o=n(38944),i=n(83457),l=n(35331),s=n(30654),u=n(70784),c=n(71819);function m(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function p(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??m(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const r=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,o=p(e),[i,l]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[s,u]=f({queryString:n,groupId:r}),[m,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,c.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:r}),k=(()=>{const e=s??m;return d({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{k&&l(k)}),[k]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),h(e)}),[u,h,o]),tabValues:o}}var k=n(76457);const g="tabList_J5MA",v="tabItem_l0OV";function b(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,i.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),r=u[n].value;r!==l&&(m(t),s(r))},d=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:i}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:p},i,{className:(0,o.Z)("tabs__item",v,i?.className,{"tabs__item--active":l===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:r}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function O(e){const t=h(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",g)},a.createElement(b,(0,r.Z)({},e,t)),a.createElement(y,(0,r.Z)({},e,t)))}function w(e){const t=(0,k.Z)();return a.createElement(O,(0,r.Z)({key:String(t)},e))}},43666:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>u,toc:()=>m});var r=n(25773),a=(n(27378),n(35318)),o=n(23930),i=n(39798);const l={sidebar_position:2,title:"Using the `DOCKER_HOST` environment variable",description:"Using the `DOCKER_HOST` environment variable can make it easier to migrate from Docker to Podman Desktop, as it allows you to continue using familiar Docker commands while taking advantage of the benefits of Podman.",keywords:["podman desktop","podman","containers","docker_host","environment","variable"],tags:["migrating-from-docker"]},s="Using the DOCKER_HOST environment variable",u={unversionedId:"migrating-from-docker/using-the-docker_host-environment-variable",id:"migrating-from-docker/using-the-docker_host-environment-variable",title:"Using the `DOCKER_HOST` environment variable",description:"Using the `DOCKER_HOST` environment variable can make it easier to migrate from Docker to Podman Desktop, as it allows you to continue using familiar Docker commands while taking advantage of the benefits of Podman.",source:"@site/docs/migrating-from-docker/using-the-docker_host-environment-variable.md",sourceDirName:"migrating-from-docker",slug:"/migrating-from-docker/using-the-docker_host-environment-variable",permalink:"/docs/migrating-from-docker/using-the-docker_host-environment-variable",draft:!1,editUrl:"https://github.com/containers/podman-desktop/tree/main/website/docs/migrating-from-docker/using-the-docker_host-environment-variable.md",tags:[{label:"migrating-from-docker",permalink:"/docs/tags/migrating-from-docker"}],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Using the `DOCKER_HOST` environment variable",description:"Using the `DOCKER_HOST` environment variable can make it easier to migrate from Docker to Podman Desktop, as it allows you to continue using familiar Docker commands while taking advantage of the benefits of Podman.",keywords:["podman desktop","podman","containers","docker_host","environment","variable"],tags:["migrating-from-docker"]},sidebar:"mySidebar",previous:{title:"Importing saved containers",permalink:"/docs/migrating-from-docker/importing-saved-containers"},next:{title:"Using `podman-mac-helper` on macOS",permalink:"/docs/migrating-from-docker/using-podman-mac-helper"}},c={},m=[{value:"Prerequisites",id:"prerequisites",level:4},{value:"Procedure",id:"procedure",level:4},{value:"cmd - Command Prompt",id:"cmd---command-prompt",level:5},{value:"Git Bash",id:"git-bash",level:5},{value:"Powershell",id:"powershell",level:5},{value:"Verification",id:"verification",level:4}],p={toc:m};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"using-the-docker_host-environment-variable"},"Using the ",(0,a.kt)("inlineCode",{parentName:"h1"},"DOCKER_HOST")," environment variable"),(0,a.kt)("p",null,"Consider using the ",(0,a.kt)("inlineCode",{parentName:"p"},"DOCKER_HOST")," environment variable to migrate transparently from Docker to Podman Desktop on all platforms."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Continue using familiar Docker commands."),(0,a.kt)("li",{parentName:"ul"},"Take advantage of the benefits of Podman."),(0,a.kt)("li",{parentName:"ul"},"Your tools, such as ",(0,a.kt)("a",{parentName:"li",href:"https://gradle.org/"},"Gradle")," or ",(0,a.kt)("a",{parentName:"li",href:"https://www.testcontainers.org/"},"Testcontainers"),", communicate with Podman without reconfiguration.")),(0,a.kt)("h4",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Podman")),(0,a.kt)("h4",{id:"procedure"},"Procedure"),(0,a.kt)(o.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"win",label:"Windows",mdxType:"TabItem"},(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Identify the location of your Podman pipe")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ podman machine inspect --format '{{.ConnectionInfo.PodmanPipe.Path}}'\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Set the ",(0,a.kt)("inlineCode",{parentName:"li"},"DOCKER_HOST")," environment variable to your Podman pipe location. You'll need to replace back slashes with forward slashes and add the ",(0,a.kt)("inlineCode",{parentName:"li"},"npipe://")," scheme to the path retrieved previously:")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Example:"),(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"prefix"),"podman-pipe"),(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"npipe://"),"//./pipe/podman-machine-default")),(0,a.kt)("p",null,"Depending on your terminal emulator of preference there is a little variation between the commands to set a session level environment variable:"),(0,a.kt)("h5",{id:"cmd---command-prompt"},"cmd - Command Prompt"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cmd"},"set DOCKER_HOST=npipe://<inspect_command_output>\n")),(0,a.kt)("h5",{id:"git-bash"},"Git Bash"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"export DOCKER_HOST=npipe://<inspect_command_output>\n")),(0,a.kt)("h5",{id:"powershell"},"Powershell"),(0,a.kt)("p",null,"Don't miss the quotes on the value or powershell will try to interpret it as a separate command instead of a value."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},'$env:DOCKER_HOST="npipe://<inspect_command_output>"\n')),(0,a.kt)("p",null,"Ideally you should set ",(0,a.kt)("inlineCode",{parentName:"p"},"DOCKER_HOST")," at the system or user level environment variables (or even load it in your CL emulator init script of choice)"),(0,a.kt)("p",null,"Note: Setting the ",(0,a.kt)("inlineCode",{parentName:"p"},"DOCKER_HOST")," environment variable isn't necessary on Windows since Podman also listens to the default ",(0,a.kt)("inlineCode",{parentName:"p"},"docker_engine")," pipe. But it may be necessary if you get the following error: ",(0,a.kt)("strong",{parentName:"p"},"Error: socket of machine is not set")," while trying to use the podman compose command.")),(0,a.kt)(i.Z,{value:"mac",label:"macOS",mdxType:"TabItem"},(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Identify the location of your Podman socket")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ podman machine inspect --format '{{.ConnectionInfo.PodmanSocket.Path}}'\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Set the ",(0,a.kt)("inlineCode",{parentName:"li"},"DOCKER_HOST")," environment variable to your Podman socket location. Be sure to add the ",(0,a.kt)("inlineCode",{parentName:"li"},"unix://")," scheme to the path retrieved previously:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ export DOCKER_HOST=unix://<your_podman_socket_location>\n"))),(0,a.kt)(i.Z,{value:"linux",label:"Linux",mdxType:"TabItem"},(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Identify the location of your Podman socket")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ podman info --format '{{.Host.RemoteSocket.Path}}'\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Set the ",(0,a.kt)("inlineCode",{parentName:"li"},"DOCKER_HOST")," environment variable to your Podman socket location. Be sure to add the ",(0,a.kt)("inlineCode",{parentName:"li"},"unix://")," scheme to the path retrieved previously:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell-session"},"$ export DOCKER_HOST=unix://<your_podman_socket_location>\n")))),(0,a.kt)("h4",{id:"verification"},"Verification"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Your tools using the ",(0,a.kt)("inlineCode",{parentName:"li"},"DOCKER_HOST")," environment variable, such as ",(0,a.kt)("a",{parentName:"li",href:"https://gradle.org/"},"Gradle")," or ",(0,a.kt)("a",{parentName:"li",href:"https://www.testcontainers.org/"},"Testcontainers"),", communicate with Podman without reconfiguration.")))}d.isMDXComponent=!0}}]);